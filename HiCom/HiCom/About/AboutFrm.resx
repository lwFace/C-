<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureEdit1.EditValue" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>